<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>false</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_pqt_impact_manag_impact</collection>
        <condition/>
        <description>Convert Start Time and End time to local time bsed on the time zone selected.</description>
        <execute_function>false</execute_function>
        <filter_condition table="x_pqt_impact_manag_impact">time_zoneVALCHANGES^EQ<item display_value="-- None --" endquery="false" field="time_zone" goto="false" newquery="false" operator="VALCHANGES" or="false" value=""/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>Set Start time End Time to Local Time</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/ ) {

    // Add your code here
    var start_time = current.start_time.toString();
    var end_time = current.end_time.toString();
    var user = new GlideRecord('sys_user');
    user.get(gs.getUserID().toString());
    var timeZone = user.getValue('time_zone');
    var localStartTime = new GlideScheduleDateTime(start_time).convertTimeZone(current.getValue('time_zone'), timeZone);
	var localEndTime = new GlideScheduleDateTime(end_time).convertTimeZone(current.getValue('time_zone'), timeZone);
	current.time_zone = timeZone;
	current.start_time = localStartTime;
	current.end_time = localEndTime;

})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>sarath.allam@kaptius.com</sys_created_by>
        <sys_created_on>2024-01-16 19:35:24</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>62e7f4911bffb910f2ab99f0b24bcb31</sys_id>
        <sys_mod_count>5</sys_mod_count>
        <sys_name>Set Start time End Time to Local Time</sys_name>
        <sys_overrides/>
        <sys_package display_value="Impact Management" source="x_pqt_impact_manag">4c3b582a970fb1500fae78ae2153af13</sys_package>
        <sys_policy/>
        <sys_scope display_value="Impact Management">4c3b582a970fb1500fae78ae2153af13</sys_scope>
        <sys_update_name>sys_script_62e7f4911bffb910f2ab99f0b24bcb31</sys_update_name>
        <sys_updated_by>sarath.allam@kaptius.com</sys_updated_by>
        <sys_updated_on>2024-01-16 19:48:10</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=62e7f4911bffb910f2ab99f0b24bcb31"/>
</record_update>
